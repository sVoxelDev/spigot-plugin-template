name: Build
on: [push]
jobs:
  build:

    runs-on: ubuntu-18.04
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository


    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin

      - name: Build
        run: ./gradlew build -x test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          path: "**/build/libs"

  test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin

      - name: Test
        run: ./gradlew test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Acceptance Tests
        run: ./gradlew cucumber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: deblockt/cucumber-report-annotations-action@v1.8
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber-report.json"

      - name: Create Coverage
        run: ./gradlew jacocoTestReport
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload CodeCov Report
        uses: codecov/codecov-action@v1
        with:
          file: "**/build/reports/jacoco/**/*.xml"

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.24
        if: always()
        with:
          files: "**/build/test-results/**/*.xml"
  javadoc:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/next' || github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin

      - name: Build Javadocs
        run: ./gradlew javadoc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: gh-pages
          folder: bukkit/build/docs/javadoc
          target-folder: javadocs

  docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/next'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required by mike deploy
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install pip dependencies
        run: pip install -r requirements.txt

      - name: Setup mkdocs deployment
        run: |
          git config --global user.name MkDocs Deploy
          git config --global user.email mkdocs-deploy@users.noreply.github.com

      - name: Deploy Documentation
        run: mike deploy --prefix docs --push --update-aliases next latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: [ build, test ]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/next'

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required by mike deploy
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Node.js v16.x
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install pip dependencies
        run: pip install -r requirements.txt

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_URL: "https://api.github.com/"
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: npx --legacy-peer-deps -p @semantic-release/changelog -p @semantic-release/git -p @google/semantic-release-replace-plugin -p @semantic-release/exec -p semantic-release semantic-release