{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"About Spigot Plugin Template"},{"location":"commands/","text":"Commands \u00b6 Here is a list of all the commands that come with the plugin. Player Commands \u00b6 Here is a list of player commands. Note All players will have the template.player permission by default, granting them access to the following commands. Command Alias Permission Description Since /template diamonds /td template.player.diamonds Let's it rain diamonds. next Admin Commands \u00b6 As an admin you have access to the following commands. Commands Alias Permission Description Since /template reload schat.admin.reload Reloads the plugin config and. next","title":"Commands"},{"location":"commands/#commands","text":"Here is a list of all the commands that come with the plugin.","title":"Commands"},{"location":"commands/#player-commands","text":"Here is a list of player commands. Note All players will have the template.player permission by default, granting them access to the following commands. Command Alias Permission Description Since /template diamonds /td template.player.diamonds Let's it rain diamonds. next","title":"Player Commands"},{"location":"commands/#admin-commands","text":"As an admin you have access to the following commands. Commands Alias Permission Description Since /template reload schat.admin.reload Reloads the plugin config and. next","title":"Admin Commands"},{"location":"faq/","text":"FAQ \u00b6 Here are some of the most asked questions for SpigotPluginTemplate. How can I debug my plugin? There is a debugPaper Gradle task you can run. It will automatically download all dependencies and starts up a test server. The server will be located under bukkit/debug/ . The feature is provided by spigradle . An awesome gradle extension for developing Minecraft plugins.","title":"FAQ"},{"location":"faq/#faq","text":"Here are some of the most asked questions for SpigotPluginTemplate. How can I debug my plugin? There is a debugPaper Gradle task you can run. It will automatically download all dependencies and starts up a test server. The server will be located under bukkit/debug/ . The feature is provided by spigradle . An awesome gradle extension for developing Minecraft plugins.","title":"FAQ"},{"location":"getting-started/","text":"Installation \u00b6 sChat requires at least Java 17 and ProtocolLib ( on the bukkit platform ). After these prerequisites are met download sChat and drop it into the plugins/ folder. Restart the server and you are done. Multi-Server Networks If you have a multi server setup using Bungeecord or Velocity , then download the plugin for the proxy and restart the proxy as well. Initial Configuration \u00b6 sChat comes with two preconfigured channels: global and team . The latter can only be accessed by players that have the schat.channel.team.join permission. It is protected . Both channels are global and forward messages to all servers. Here is a quick overview of the channel configuration. Each setting is explained in great detail in the channel configuration section. Global Channel Config channels : global : name : \"<#189AB4>Global\" # colors the name with the given hex formatted color settings : protected : false # the channel can be joined without a permission auto_join : true # the channel is added automatically to players global : true # messages are forwarded to all servers on the network forced : true # the channel cannot be left team : name : \"Team\" settings : protected : true # the channel can only be joined with the 'schat.channel.team.join' permission auto_join : true global : true forced : false # players can leave the channel if they wish You can reload the channel configuration on-the-fly with the /schat reload command. Do I need to set all options of a channel for it to be valid? No. The only thing you need to configure for a valid channel is the name. channels : minimal : name : Minimal What do I need to configure on the proxy? The proxy does not require any configuration and only serves as a message relay between servers. This might change in the future. But for know you don't need to touch the proxy config. Full config.yml \u00b6 Here is the complete config.yml how it is shipped with the plugin. SpigotPluginTemplate will automatically save and overwrite a config.default.yml on every start. The default config always contains the latest settings. You can also take a look at the configuration reference to see which options exist and when they were added. config.yml # Spigot Plugin Template Example Config welcome : enabled : true message : \"Welcome to our server!\" Next Steps \u00b6 Now that you are setup, you have one of many options: take a look at the commands and permissions deep dive into the configuration or get started with the developer API","title":"Installation"},{"location":"getting-started/#installation","text":"sChat requires at least Java 17 and ProtocolLib ( on the bukkit platform ). After these prerequisites are met download sChat and drop it into the plugins/ folder. Restart the server and you are done. Multi-Server Networks If you have a multi server setup using Bungeecord or Velocity , then download the plugin for the proxy and restart the proxy as well.","title":"Installation"},{"location":"getting-started/#initial-configuration","text":"sChat comes with two preconfigured channels: global and team . The latter can only be accessed by players that have the schat.channel.team.join permission. It is protected . Both channels are global and forward messages to all servers. Here is a quick overview of the channel configuration. Each setting is explained in great detail in the channel configuration section. Global Channel Config channels : global : name : \"<#189AB4>Global\" # colors the name with the given hex formatted color settings : protected : false # the channel can be joined without a permission auto_join : true # the channel is added automatically to players global : true # messages are forwarded to all servers on the network forced : true # the channel cannot be left team : name : \"Team\" settings : protected : true # the channel can only be joined with the 'schat.channel.team.join' permission auto_join : true global : true forced : false # players can leave the channel if they wish You can reload the channel configuration on-the-fly with the /schat reload command. Do I need to set all options of a channel for it to be valid? No. The only thing you need to configure for a valid channel is the name. channels : minimal : name : Minimal What do I need to configure on the proxy? The proxy does not require any configuration and only serves as a message relay between servers. This might change in the future. But for know you don't need to touch the proxy config.","title":"Initial Configuration"},{"location":"getting-started/#full-configyml","text":"Here is the complete config.yml how it is shipped with the plugin. SpigotPluginTemplate will automatically save and overwrite a config.default.yml on every start. The default config always contains the latest settings. You can also take a look at the configuration reference to see which options exist and when they were added. config.yml # Spigot Plugin Template Example Config welcome : enabled : true message : \"Welcome to our server!\"","title":"Full config.yml"},{"location":"getting-started/#next-steps","text":"Now that you are setup, you have one of many options: take a look at the commands and permissions deep dive into the configuration or get started with the developer API","title":"Next Steps"},{"location":"permissions/","text":"Permissions \u00b6 sChat bundles its permissions into schat.player ( default: true ) and schat.admin ( default: OP ) permissions. Player Permissions \u00b6 Every player has the following permissions by default. Info You need to negate the schat.player permission if you only want to give players access to a portion of the player commands and features. Permission Description Since schat.player This permission grouping contains all of the schat.player.* permissions. It is applied to all players by default. 1.0.0 schat.player.channel.join Allows the player to join channels. This can be further restricted with individual channel permissions. 1.0.0 schat.player.channel.leave Allows the player to leave channels. 1.0.0 schat.player.channel.quickmessage Enables the player to send quick messages ( /ch <channel> <message> ) to channels he is allowed to write in. 1.0.0 schat.player.directmessage Allows the player to send direct messages ( /dm <player> <message> ) to other players. 1.0.0 Admin Permissions \u00b6 These are the additional permissions for admins. Permission Description Since schat.admin This permission groups all admin permissions nested under the schat.admin.* permissions. OPs get this by default. 1.0.0 schat.admin.reload Allows performing the /schat reload command to reload the plugin. 1.0.0","title":"Permissions"},{"location":"permissions/#permissions","text":"sChat bundles its permissions into schat.player ( default: true ) and schat.admin ( default: OP ) permissions.","title":"Permissions"},{"location":"permissions/#player-permissions","text":"Every player has the following permissions by default. Info You need to negate the schat.player permission if you only want to give players access to a portion of the player commands and features. Permission Description Since schat.player This permission grouping contains all of the schat.player.* permissions. It is applied to all players by default. 1.0.0 schat.player.channel.join Allows the player to join channels. This can be further restricted with individual channel permissions. 1.0.0 schat.player.channel.leave Allows the player to leave channels. 1.0.0 schat.player.channel.quickmessage Enables the player to send quick messages ( /ch <channel> <message> ) to channels he is allowed to write in. 1.0.0 schat.player.directmessage Allows the player to send direct messages ( /dm <player> <message> ) to other players. 1.0.0","title":"Player Permissions"},{"location":"permissions/#admin-permissions","text":"These are the additional permissions for admins. Permission Description Since schat.admin This permission groups all admin permissions nested under the schat.admin.* permissions. OPs get this by default. 1.0.0 schat.admin.reload Allows performing the /schat reload command to reload the plugin. 1.0.0","title":"Admin Permissions"},{"location":"configuration/","text":"Configuration \u00b6 The configuration documentation of sChat is split into two parts. One for common settings , like logging, private chats and so on. The second part goes into detail how you can configure and setup channels . New Config Options New config options are not automatically added to the config.yml . The default option will be used if nothing is configured. Take a look at the configuration reference to see what options where added when. Complete Config \u00b6 Here is the complete config.yml how it is shipped with the plugin. SpigotPluginTemplate will automatically save and overwrite a config.default.yml on every start. The default config always contains the latest settings. You can also take a look at the configuration reference to see which options exist and when they were added. config.yml # Spigot Plugin Template Example Config welcome : enabled : true message : \"Welcome to our server!\" Configuration Reference Legend \u00b6 You will notice several different icons and symbols across the config reference . These are explained here. Symbol Meaning 1.0.0 The config option had its first stable release in the given version. next The option is currently under development and available in the latest snapshot. Marks an option as the default option. The config option is reloadable, requiring no full server restart. All channel settings are reloadable. The feature is still experimental and may behave unexpected or suddenly change.","title":"Configuration"},{"location":"configuration/#configuration","text":"The configuration documentation of sChat is split into two parts. One for common settings , like logging, private chats and so on. The second part goes into detail how you can configure and setup channels . New Config Options New config options are not automatically added to the config.yml . The default option will be used if nothing is configured. Take a look at the configuration reference to see what options where added when.","title":"Configuration"},{"location":"configuration/#complete-config","text":"Here is the complete config.yml how it is shipped with the plugin. SpigotPluginTemplate will automatically save and overwrite a config.default.yml on every start. The default config always contains the latest settings. You can also take a look at the configuration reference to see which options exist and when they were added. config.yml # Spigot Plugin Template Example Config welcome : enabled : true message : \"Welcome to our server!\"","title":"Complete Config"},{"location":"configuration/#configuration-reference-legend","text":"You will notice several different icons and symbols across the config reference . These are explained here. Symbol Meaning 1.0.0 The config option had its first stable release in the given version. next The option is currently under development and available in the latest snapshot. Marks an option as the default option. The config option is reloadable, requiring no full server restart. All channel settings are reloadable. The feature is still experimental and may behave unexpected or suddenly change.","title":"Configuration Reference Legend"},{"location":"configuration/reference/","text":"Configuration Reference \u00b6 These are all of the available config options for sChat. The following type of settings exist: Type Values boolean true or false string A sequence of characters. number A valid number with or without floating points. minimessage A string parsed using the MiniMessage Format format. color A valid Minecraft or hex color. See here for details . decoration A named text decoration. See this reference . Looking for the channel settings? Head over to the seperate channel configuration section. Here is the complete config.yml how it is shipped with the plugin. SpigotPluginTemplate will automatically save and overwrite a config.default.yml on every start. The default config always contains the latest settings. You can also take a look at the configuration reference to see which options exist and when they were added. config.yml # Spigot Plugin Template Example Config welcome : enabled : true message : \"Welcome to our server!\" debug \u00b6 1.0.0 \u00b7 boolean \u00b7 false Set to true and restart your server to produce an enormous amount of debug logs. debug : true messenger \u00b6 1.0.0 \u00b7 string \u00b7 pluginmessage The messenger controls how global messages are forwarded to the other servers in the network. Type Description Since pluginmessage Messages are sent thru the Plugin Messaging Channel to the proxy. The proxy then forwards them to all other servers in the network. sChat must be installed on the proxy for this to work. 1.0.0 messenger : \"pluginmessage\" Invalid Messenger An invalid messenger type will prevent your server from starting. view \u00b6 The following settings control how the view is rendered to players. All config options reside under the view section. view : ... system_message_format \u00b6 1.0.0 \u00b7 minimessage \u00b7 Controls how system messages (messages not sent by players) are rendered. Note There is normally no need to modify this setting. view : system_message_format : \"<dark_aqua><text>\" private_chat_format \u00b6 The following section controls how private chats are formatted. All config options go under view.private_chat_format section. Warning The private chat formatting is not reloadable . You must restart your server for the changes to take effect. The formatting configs of channels is reloadable. view : private_chat_format : ... # <-- all options go here","title":"Reference"},{"location":"configuration/reference/#configuration-reference","text":"These are all of the available config options for sChat. The following type of settings exist: Type Values boolean true or false string A sequence of characters. number A valid number with or without floating points. minimessage A string parsed using the MiniMessage Format format. color A valid Minecraft or hex color. See here for details . decoration A named text decoration. See this reference . Looking for the channel settings? Head over to the seperate channel configuration section. Here is the complete config.yml how it is shipped with the plugin. SpigotPluginTemplate will automatically save and overwrite a config.default.yml on every start. The default config always contains the latest settings. You can also take a look at the configuration reference to see which options exist and when they were added. config.yml # Spigot Plugin Template Example Config welcome : enabled : true message : \"Welcome to our server!\"","title":"Configuration Reference"},{"location":"configuration/reference/#debug","text":"1.0.0 \u00b7 boolean \u00b7 false Set to true and restart your server to produce an enormous amount of debug logs. debug : true","title":"debug"},{"location":"configuration/reference/#messenger","text":"1.0.0 \u00b7 string \u00b7 pluginmessage The messenger controls how global messages are forwarded to the other servers in the network. Type Description Since pluginmessage Messages are sent thru the Plugin Messaging Channel to the proxy. The proxy then forwards them to all other servers in the network. sChat must be installed on the proxy for this to work. 1.0.0 messenger : \"pluginmessage\" Invalid Messenger An invalid messenger type will prevent your server from starting.","title":"messenger"},{"location":"configuration/reference/#view","text":"The following settings control how the view is rendered to players. All config options reside under the view section. view : ...","title":"view"},{"location":"configuration/reference/#system_message_format","text":"1.0.0 \u00b7 minimessage \u00b7 Controls how system messages (messages not sent by players) are rendered. Note There is normally no need to modify this setting. view : system_message_format : \"<dark_aqua><text>\"","title":"system_message_format"},{"location":"configuration/reference/#private_chat_format","text":"The following section controls how private chats are formatted. All config options go under view.private_chat_format section. Warning The private chat formatting is not reloadable . You must restart your server for the changes to take effect. The formatting configs of channels is reloadable. view : private_chat_format : ... # <-- all options go here","title":"private_chat_format"},{"location":"developer/","text":"Developer API \u00b6 Developer API coming soon... I am sorry , but the Developer API is still a work in progress and will be available soon.","title":"Developer API"},{"location":"developer/#developer-api","text":"Developer API coming soon... I am sorry , but the Developer API is still a work in progress and will be available soon.","title":"Developer API"},{"location":"partials/_config/","text":"Here is the complete config.yml how it is shipped with the plugin. SpigotPluginTemplate will automatically save and overwrite a config.default.yml on every start. The default config always contains the latest settings. You can also take a look at the configuration reference to see which options exist and when they were added. config.yml # Spigot Plugin Template Example Config welcome : enabled : true message : \"Welcome to our server!\"","title":" config"}]}